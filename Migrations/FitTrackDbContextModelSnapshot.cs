// <auto-generated />
using System;
using FitTrackAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitTrackAPI.Migrations
{
    [DbContext(typeof(FitTrackDbContext))]
    partial class FitTrackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("FitTrackAPI.Model.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentarios")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("FitTrackAPI.Model.ExecucaoExercicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExercicioId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Peso")
                        .HasColumnType("REAL");

                    b.Property<int?>("Repeticoes")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SessaoTreinoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("SessaoTreinoId");

                    b.ToTable("ExecucoesExercicio");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Exercicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TreinoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TreinoId");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("FitTrackAPI.Model.SessaoTreino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TreinoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TreinoId");

                    b.ToTable("SessoesTreino");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Treino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Avaliacao", b =>
                {
                    b.HasOne("FitTrackAPI.Model.Aluno", "Aluno")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("FitTrackAPI.Model.ExecucaoExercicio", b =>
                {
                    b.HasOne("FitTrackAPI.Model.Exercicio", "Exercicio")
                        .WithMany()
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitTrackAPI.Model.SessaoTreino", "SessaoTreino")
                        .WithMany("ExecucaoExercicios")
                        .HasForeignKey("SessaoTreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("SessaoTreino");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Exercicio", b =>
                {
                    b.HasOne("FitTrackAPI.Model.Treino", "Treino")
                        .WithMany("Exercicios")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("FitTrackAPI.Model.SessaoTreino", b =>
                {
                    b.HasOne("FitTrackAPI.Model.Treino", "Treino")
                        .WithMany()
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Treino", b =>
                {
                    b.HasOne("FitTrackAPI.Model.Aluno", "Aluno")
                        .WithMany("Treinos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Aluno", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("FitTrackAPI.Model.SessaoTreino", b =>
                {
                    b.Navigation("ExecucaoExercicios");
                });

            modelBuilder.Entity("FitTrackAPI.Model.Treino", b =>
                {
                    b.Navigation("Exercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
